1) Trouver les inodes perdues :
	>ils -r 0image.ext3 
		class|host|device|start_time
		ils|salle235-05.arda||1516981940
		st_ino|st_alloc|st_uid|st_gid|st_mtime|st_atime|st_ctime|st_crtime|st_mode|st_nlink|st_size
		30|f|1000|100|1423447732|1423447393|1423447732|0|644|0|0

	c'est l'inode 30

2) Inspecter l'inode 30 pour voir à quel groupe de block il appartient :
	
	debugfs : imap <30>
		Inode 30 is part of block group 0
		located at block 23, offset 0x0280

3)	Inspecter le journal
	>jls 0image.ext3 | grep "Block 23"
		4:	Unallocated FS Block 23
		20:	Unallocated FS Block 23
		27:	Unallocated FS Block 23
		113:	Unallocated FS Block 23
		122:	Unallocated FS Block 23
		129:	Unallocated FS Block 23
		138:	Unallocated FS Block 23

4)	On copie l'inode 30 depuis le journal pour connaitre les propriétés du fichier supprimé

	skip = 5 car (numéro de l'inode)%(nombre d'inode par bloc) 
		= 30%8 
		= 6-1 (car on part de zéro) 
		= 5 

	>jcat 0image.ext3 8 20 | dd bs=128 skip=5 count=1 > log_jcat_inode23_0image_ext3.txt

	          on obtient la taille du fichier
	          |
	          v
	a481 e803 3b57 0400 6115 d854 6115 d854
	6115 d854 0000 0000 6400 0100 3202 0000 

	                    Pointeur vers le premier bloc
	                    |
	                    v
	0000 0000 0000 0000 9b06 0000 9c06 0000
	9d06 0000 9e06 0000 9f06 0000 a006 0000
	a106 0000 a206 0000 a306 0000 a406 0000
	a506 0000 a606 0000 a706 0000 a807 0000
	          ^	        ^         ^
	          |         |         |
	          |         |         Bloc indirect indirect
	          |         |
	          |         Bloc indirect
	          |
	          12ème bloc direct

	0000 0000 8596 cda3 0000 0000 0000 0000
	0000 0000 0000 0000 0000 0000 0000 0000

	l'inode est en little endian.

	en big endian, puis en décimal (avec printf "%d") ça fait :

	taille 		 	= 0x0004573b = 284475 
	premier bloc 	= 0x0000069b = 1691
	bloc indirect	= 0x000006a7
	bloc indirect indirect = 0x000007a8

5)	On copie les 12 blocs directs :
	>dd if=0image.ext3 of=recover1.dat bs=1024 count=12 skip=1691

6)	On regarde le bloc indirect :

	debugfs:  block_dump 0x06a7

		      Pointeur vers le premier bloc indirect = 0x000006a8 = 1704
		      |
		      v
		0000  a806 0000 a906 0000 aa06 0000 ab06 0000  ................
		0020  ac06 0000 ad06 0000 ae06 0000 af06 0000  ................
		....
		il y a 256 blocs

	et on copie les 256 blocs indirects :

	>dd if=0image.ext3 of=recover2.dat bs=1024 count=256 skip=1704

7)	On regarde le bloc indirect indirect :

	debugfs:  block_dump 0x07a8

		      Ce bloc = 0x000007a9
		      |
		      v
		0000  a907 0000 0000 0000 0000 0000 0000 0000  ................
		0020  0000 0000 0000 0000 0000 0000 0000 0000  ................
		*

	debugfs:  block_dump 0x07a9

		      ça = 0x000007aa = 1962
		      |
		      v
		0000  aa07 0000 ab07 0000 ac07 0000 ad07 0000  ................
		0020  ae07 0000 af07 0000 b007 0000 b107 0000  ................
		0040  b207 0000 b307 0000 0000 0000 0000 0000  ................
		0060  0000 0000 0000 0000 0000 0000 0000 0000  ................
		*
		il y a 10 blocs

	et on copie les 10 blocs indirects indirects : 

	>dd if=0image.ext3 of=recover3.dat bs=1024 count=10 skip=1962

6)	On rassemble les trois parties du fichier ensemble :
		
	>cat recover1.dat recover2.dat recover3.dat > recover.dat

7) 	On trouve le type du fichier :

	>file recover.dat 
		recover.dat: JPEG image data,...

	C'est un JPEG, le fichier à bien été restauré

	>mv recover.dat recover.jpg

	Et voilà :)


